<script>
    //This allows me to fudge the types a little bit
    declare var BareMux: any;
    declare var EpxMod: any;
    declare global {
        interface Window {
            loadProxyScripts: any;
            setTransport: any;
        }
    }
    //load all of the scripts required to use uv/rh (this is not loaded by default due to the size)
    //Usage: await window.loadProxyScripts or window.loadProxyScript.then(() => {})
    window.loadProxyScripts = function() {
        return new Promise<void>((resolve) => {
            const epoxyScript = document.createElement('script');
            epoxyScript.src = '/epoxy/index.js';
            epoxyScript.defer = true;
            document.body.appendChild(epoxyScript);
            const bareScript = document.createElement('script');
            bareScript.src = '/transports/bareTransport.js';
            document.body.appendChild(bareScript);
            bareScript.defer = true;
            const uvBundle = document.createElement('script');
            uvBundle.src = '/uv/uv.bundle.js';
            uvBundle.defer = true;
            document.body.appendChild(uvBundle);
            const uvConfig = document.createElement('script');
            uvConfig.src = '/uv/uv.config.js';
            uvConfig.defer = true;
            document.body.appendChild(uvConfig);
            const bareMux = document.createElement('script');
            bareMux.src = '/baremux/bare.cjs';
            bareMux.defer = true;
            document.body.appendChild(bareMux);
            const search = document.createElement('script');
            search.src = "/search.js";
            search.defer = true;
            document.body.appendChild(search);
            const checkScripts = setInterval(() => {
                //If both of these aren't defined this will repeat until they are
                //this allows use to wait for all of the scripts to be ready *before* we setup the serviceworker
                if (typeof EpxMod !== 'undefined' && typeof BareMux !== 'undefined') {
                    clearInterval(checkScripts);
                    resolve();
                }
            }, 100);
        })
    }
    //function to set a transport between the *defined* transports
    //Usage: await window.setTransport("epoxy") or window.setTransport("epoxy").then(() => {})
    window.setTransport = function(transport: string) {
        return new Promise<void>((resolve) => {
            localStorage.setItem("incog||transport", transport);
            const wispUrl = (location.protocol === "https:" ? "wss://" : "ws://") + location.host + "/wisp/";
            if (transport === "epoxy") {
                BareMux.SetTransport("EpxMod.EpoxyClient", { wisp: wispUrl })
            }
            if (transport === "bare") {
                BareMux.SetTransport("BareMod.BareClient", window.location.origin + "/bare/");
            }
            resolve();
        })
        //the promise here is to really make everything look the same even though most of this is synchronous code
    }
</script>
